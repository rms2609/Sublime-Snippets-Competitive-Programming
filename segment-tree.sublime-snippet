<snippet>
	<content><![CDATA[

#define MAX 4000010  //2*2^(log(sizeof arr+1))

int tree[MAX];

void build(int node,int st,int en,int A[])
{
   if(st==en) tree[node]=A[st];
   else
   {
       int mid=(st+en)/2;

       build(2*node,st,mid,A);

       build(2*node+1,mid+1,en,A);

       tree[node]=tree[2*node]+tree[node*2+1];    //check 
   }
}

void update(int node,int st,int en,int A[] ,int idx,int val)
{
    if(st==en) {A[idx]+=val;tree[node]+=val;}     //check
   else
   {
       int mid=(st+en)/2;

      if(idx>=st&&idx<=mid)  update(2*node,st,mid,A,idx,val);

      else update(2*node+1,mid+1,en,A,idx,val);

       tree[node]=tree[2*node]+tree[node*2+1];   //check
   }

}

int query(int node,int st,int en,int A[],int l,int r)
{
    if(l>en or r<st) return 0;   // check here what are you returning
    if(l<=st and r>=en) return tree[node]; 
    else
    {
        int mid=(st+en)/2;
        int p1=query(2*node,st,mid,A,l,r);
        int p2=query(2*node+1,mid+1,en,A,l,r);
        return (p1+p2);         //check what you intend to return
    }
}


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>segment-tree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.cpp,source.c++,source.c</scope>
</snippet>
